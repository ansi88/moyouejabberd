{loglevel, 5}.

{hosts, ["liangc.com","localhost","192.168.0.159","127.0.0.1"]}.

%%{route_subdomains, s2s}.

{listen,
 [
  {5222, ejabberd_c2s, [
			{certfile, "/usr/local/ejabberd/conf/server.pem"}, starttls,
			{access, c2s},
			{shaper, c2s_shaper},
			{max_stanza_size, 65536}
		       ]},

  {5269, ejabberd_s2s_in, [
			   {shaper, s2s_shaper},
			   {max_stanza_size, 131072}
			  ]},

  {5280, ejabberd_http, [
                         {request_handlers, [
			 	{["web"], mod_http_fileserver},
				{["rest"], mod_rest}
			 ]},
			 captcha,
			 http_bind, 
			 http_poll, 
			 web_admin
			]}
 ]}.

%%{s2s_use_starttls, true}.

%%{s2s_certfile, "/usr/local/ejabberd/conf/server.pem"}.
%%{domain_certfile, "example.org", "/usr/local/ejabberd/conf/example_org.pem"}.
%%{domain_certfile, "example.com", "/usr/local/ejabberd/conf/example_com.pem"}.
%%{s2s_default_policy, allow}.
%%{{s2s_host, "goodhost.org"}, allow}.
%%{{s2s_host, "badhost.org"}, deny}.
%%{auth_method, internal}.
%{extauth_program, "/usr/local/authentication/script.py"}.
%%{extauth_program,"/root/xdc/auth"}.

{auth_method, external}.

{shaper, normal, {maxrate, 1000}}.

{shaper, fast, {maxrate, 50000}}.

{acl, admin, {user, "admin", "test.com"}}.

{acl, local, {user_regexp, ""}}.

{access, max_user_sessions, [{10, all}]}.

{access, local, [{allow, local}]}.

{access, c2s, [{deny, blocked},
	       {allow, all}]}.
	       
{access, c2s_shaper, [{none, admin},
		      {normal, all}]}.

{access, s2s_shaper, [{fast, all}]}.

{access, announce, [{allow, admin}]}.

{access, configure, [{allow, admin}]}.

{access, muc_admin, [{allow, admin}]}.

{access, muc, [{allow, all}]}.
{access, muc_create, [{allow, local}]}.

{access, register, [{allow, all}]}.

{access, pubsub_createnode, [{allow, local}]}.


{language, "en"}.

{clusterid, 1}.


{modules,
 [
  {mod_adhoc,    []},
  {mod_announce, [{access, announce}]}, % requires mod_adhoc
  {mod_caps,     []}, 
  {mod_configure,[]}, % requires mod_adhoc
  {mod_disco,    []},
  {mod_http_bind,[]},
  {mod_last_odbc,     []},
  {mod_muc,      [
		  %%{host, "conference.@HOST@"},
		  {access, muc},
		  {access_create, muc_create},
		  {access_persistent, muc_create},
		  {access_admin, muc_admin}
		 ]},
  {mod_offline_odbc,  []},
  {mod_privacy_odbc,  []},
  {mod_private_odbc,  []},
  {mod_pubsub_odbc,   [ % requires mod_caps
		  {access_createnode, pubsub_createnode},
		  {ignore_pep_from_offline, true}, % reduce resource comsumption, but XEP incompliant
		  %%{ignore_pep_from_offline, false},  % XEP compliant, but increases resource comsumption
		  {last_item_cache, false},
		  {plugins, ["flat_odbc", "hometree_odbc", "pep_odbc"]}
		 ]},
  {mod_register, [
		  %%
		  %% After successful registration, the user receives 
		  %% a message with this subject and body.
		  %%
		  {welcome_message, {"Welcome!", 
				     "Welcome to this Jabber server."}},

		  %%
		  %% When a user registers, send a notification to 
		  %% these Jabber accounts.
		  %%
		  %%{registration_watchers, ["admin1@example.org"]},

		  {access, register}
		 ]},
  {mod_roster_odbc,   []},
  %%{mod_service_log,[]},
  {mod_shared_roster,[]},
  %%{mod_stats,    []},
  {mod_time,     []},
  {mod_vcard_odbc,    []},
  {mod_version,  []},
  {mod_rest, [
              {allowed_ips, "all"},
              {allowed_stanza_types, [ "message", "presence", "iq" ]},
              {access_commands, [ {configure, [registered_users], []} ]}
             ]}
 ]}.


%%% Local Variables:
%%% mode: erlang
%%% End:
%%% vim: set filetype=erlang tabstop=8: